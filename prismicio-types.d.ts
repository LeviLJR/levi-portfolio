// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PickContentRelationshipFieldData<
  TRelationship extends
    | prismic.CustomTypeModelFetchCustomTypeLevel1
    | prismic.CustomTypeModelFetchCustomTypeLevel2
    | prismic.CustomTypeModelFetchGroupLevel1
    | prismic.CustomTypeModelFetchGroupLevel2,
  TData extends Record<
    string,
    | prismic.AnyRegularField
    | prismic.GroupField
    | prismic.NestedGroupField
    | prismic.SliceZone
  >,
  TLang extends string,
> =
  // Content relationship fields
  {
    [TSubRelationship in Extract<
      TRelationship["fields"][number],
      prismic.CustomTypeModelFetchContentRelationshipLevel1
    > as TSubRelationship["id"]]: ContentRelationshipFieldWithData<
      TSubRelationship["customtypes"],
      TLang
    >;
  } & // Group
  {
    [TGroup in Extract<
      TRelationship["fields"][number],
      | prismic.CustomTypeModelFetchGroupLevel1
      | prismic.CustomTypeModelFetchGroupLevel2
    > as TGroup["id"]]: TData[TGroup["id"]] extends prismic.GroupField<
      infer TGroupData
    >
      ? prismic.GroupField<
          PickContentRelationshipFieldData<TGroup, TGroupData, TLang>
        >
      : never;
  } & // Other fields
  {
    [TFieldKey in Extract<
      TRelationship["fields"][number],
      string
    >]: TFieldKey extends keyof TData ? TData[TFieldKey] : never;
  };

type ContentRelationshipFieldWithData<
  TCustomType extends
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel1 | string)[]
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel2 | string)[],
  TLang extends string = string,
> = {
  [ID in Exclude<
    TCustomType[number],
    string
  >["id"]]: prismic.ContentRelationshipField<
    ID,
    TLang,
    PickContentRelationshipFieldData<
      Extract<TCustomType[number], { id: ID }>,
      Extract<prismic.Content.AllDocumentTypes, { type: ID }>["data"],
      TLang
    >
  >;
}[Exclude<TCustomType[number], string>["id"]];

/**
 * Item in *Card Project → Techs Project*
 */
export interface CardProjectDocumentDataTechsProjectItem {
  /**
   * tech field in *Card Project → Techs Project*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: card_project.techs_project[].tech
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  tech: prismic.KeyTextField;
}

/**
 * Item in *Card Project → project description*
 */
export interface CardProjectDocumentDataProjectDescriptionItem {
  /**
   * role field in *Card Project → project description*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: card_project.project_description[].role
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  role: prismic.KeyTextField;

  /**
   * team field in *Card Project → project description*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: card_project.project_description[].team
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  team: prismic.KeyTextField;

  /**
   * details field in *Card Project → project description*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: card_project.project_description[].details
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  details: prismic.KeyTextField;
}

/**
 * Item in *Card Project → links*
 */
export interface CardProjectDocumentDataLinksItem {
  /**
   * code field in *Card Project → links*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: card_project.links[].code
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  code: prismic.KeyTextField;

  /**
   * demo field in *Card Project → links*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: card_project.links[].demo
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  demo: prismic.KeyTextField;
}

/**
 * Content for Card Project documents
 */
interface CardProjectDocumentData {
  /**
   * Project Title field in *Card Project*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: card_project.project_title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  project_title: prismic.KeyTextField;

  /**
   * Project Image field in *Card Project*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: card_project.project_image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  project_image: prismic.ImageField<never>;

  /**
   * Start Date field in *Card Project*
   *
   * - **Field Type**: Date
   * - **Placeholder**: *None*
   * - **API ID Path**: card_project.start_date
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/date
   */
  start_date: prismic.DateField;

  /**
   * End Date field in *Card Project*
   *
   * - **Field Type**: Date
   * - **Placeholder**: *None*
   * - **API ID Path**: card_project.end_date
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/date
   */
  end_date: prismic.DateField;

  /**
   * Techs Project field in *Card Project*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: card_project.techs_project[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  techs_project: prismic.GroupField<
    Simplify<CardProjectDocumentDataTechsProjectItem>
  >;

  /**
   * project description field in *Card Project*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: card_project.project_description[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  project_description: prismic.GroupField<
    Simplify<CardProjectDocumentDataProjectDescriptionItem>
  >;

  /**
   * links field in *Card Project*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: card_project.links[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  links: prismic.GroupField<Simplify<CardProjectDocumentDataLinksItem>>;
}

/**
 * Card Project document from Prismic
 *
 * - **API ID**: `card_project`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type CardProjectDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<CardProjectDocumentData>,
    "card_project",
    Lang
  >;

/**
 * Content for media documents
 */
interface MediaDocumentData {
  /**
   * link field in *media*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: *None*
   * - **API ID Path**: media.link
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/link-to-media
   */
  link: prismic.LinkToMediaField<prismic.FieldState, never>;
}

/**
 * media document from Prismic
 *
 * - **API ID**: `media`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type MediaDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<MediaDocumentData>, "media", Lang>;

export type AllDocumentTypes = CardProjectDocument | MediaDocument;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      CardProjectDocument,
      CardProjectDocumentData,
      CardProjectDocumentDataTechsProjectItem,
      CardProjectDocumentDataProjectDescriptionItem,
      CardProjectDocumentDataLinksItem,
      MediaDocument,
      MediaDocumentData,
      AllDocumentTypes,
    };
  }
}
